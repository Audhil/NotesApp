<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="note"
            type="com.example.notetakingapp.data.NoteModel" />

        <import type="com.example.notetakingapp.util.AppExtnFuncsKt" />

    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TextView
            android:id="@+id/note_title"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:paddingStart="20dp"
            android:paddingTop="20dp"
            android:paddingEnd="20dp"
            android:text="@{note.title}"
            android:textColor="@android:color/black"
            android:textSize="@dimen/text_size_22sp"
            android:textStyle="bold"
            android:transitionName="@string/app_name"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            tools:targetApi="lollipop"
            tools:text="Note title" />

        <TextView
            android:id="@+id/note_timestamp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="5dp"
            android:paddingStart="20dp"
            android:paddingEnd="20dp"
            android:text="@{AppExtnFuncsKt.formatTimeStamp(note.timeStamp)}"
            android:textSize="@dimen/text_size_12sp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/note_title"
            tools:text="saved on 27 Feb 2020, 8:38 PM" />

        <View
            android:id="@+id/hori_divider"
            android:layout_width="wrap_content"
            android:layout_height="1dp"
            android:layout_marginTop="20dp"
            android:background="@color/black_20"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/note_timestamp" />


        <ScrollView
            android:layout_width="0dp"
            android:layout_height="0dp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/hori_divider">

            <TextView
                android:id="@+id/note_content"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:padding="20dp"
                android:scrollbars="vertical"
                android:text="@{note.content}"
                android:textSize="@dimen/text_size_14sp"
                android:transitionName="@string/app_name"
                tools:targetApi="lollipop"
                tools:text="IMost of the time when you are using lambdas, you are not even doing functional programming, because you often are violating one key rule of functional programming: no side effects.For example:
                collection.forEach(System.out::println);is of course very cute to use, and is (wow) 10 characters shorter than:for (Object o : collection) System.out.println(o);but this is not functional programming because it has side effects.
                What you are doing are anonymous methods/objects, using a shorthand notion. Itâ€™s sometimes convenient, it is usually short, and unfortunately often unreadable, once you start cramming complex problems into this framework.
                It does not offer efficiency improvements, unless you have the propery of side-effect freeness (and a language compiler that can exploit this, or parallelism that can then call the function concurrently in arbitrary order and still yield the same result).I know, all the Scala fanboys are going to hate me now. But: Stop overusing lambda expressions." />

        </ScrollView>

    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>